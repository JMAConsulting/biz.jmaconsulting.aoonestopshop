diff --git a/CRM/Aoservicelisting/Form/ProviderApplication.php b/CRM/Aoservicelisting/Form/ProviderApplication.php
index 9076251..bb015a1 100644
--- a/CRM/Aoservicelisting/Form/ProviderApplication.php
+++ b/CRM/Aoservicelisting/Form/ProviderApplication.php
@@ -39,6 +39,10 @@ public $_loggedInContactID;
         'contact_id_a' => $loggedInContactId,
         'relationship_type_id' => PRIMARY_CONTACT_REL,
       ]);
+      if (empty($relationship['values'])) {
+        $this->_loggedInContactID = NULL;
+        return;
+      }
       $this->organizationId = $relationship['values'][$relationship['id']]['contact_id_b'];
       $this->set('organizationId', $relationship['values'][$relationship['id']]['contact_id_b']);
     }
diff --git a/CRM/Aoservicelisting/Form/ProviderApplicationConfirm.php b/CRM/Aoservicelisting/Form/ProviderApplicationConfirm.php
index c069148..42f57e4 100644
--- a/CRM/Aoservicelisting/Form/ProviderApplicationConfirm.php
+++ b/CRM/Aoservicelisting/Form/ProviderApplicationConfirm.php
@@ -275,7 +275,7 @@ class CRM_Aoservicelisting_Form_ProviderApplicationConfirm extends CRM_Aoservice
             E::createUserAccount($staffMember['id']);
             // Send email on confirmation.
             if (empty($this->_loggedInContactID)) {
-              E::sendMessage($staffMember['id']);
+              E::sendMessage($staffMember['id'], RECEIVED_MESSAGE);
             }
           }
           else {
diff --git a/CRM/Aoservicelisting/Form/ProviderApplicationForm.php b/CRM/Aoservicelisting/Form/ProviderApplicationForm.php
index a0b0b30..b1cf85c 100644
--- a/CRM/Aoservicelisting/Form/ProviderApplicationForm.php
+++ b/CRM/Aoservicelisting/Form/ProviderApplicationForm.php
@@ -300,13 +300,16 @@ class CRM_Aoservicelisting_Form_ProviderApplicationForm extends CRM_Aoservicelis
         }
       }
     }
+    $flag = FALSE;
     if ($values['listing_type'] == 1 && count($setValues) > 1 ) {
       $errors[REGULATED_SERVICE_CF] = E::ts('You have selected more than one registered service');
+      $flag = TRUE;
     }
     if ($values['listing_type'] == 2 && count($setValues) > $staffMemberCount) {
       $errors[REGULATED_SERVICE_CF] = E::ts('Ensure you have entered all the staff members that match the registered services');
+      $flag = TRUE;
     }
-    if (!empty($missingRegulators)) {
+    if (!empty($missingRegulators) && !$flag) {
       $errors[REGULATED_SERVICE_CF] = E::ts('No Staff members have been entered for %1 regulated services', [1 => implode(', ', $missingRegulators)]);
     }
 
diff --git a/aoservicelisting.civix.php b/aoservicelisting.civix.php
index 2b8eed2..04bd095 100644
--- a/aoservicelisting.civix.php
+++ b/aoservicelisting.civix.php
@@ -76,12 +76,12 @@ class CRM_Aoservicelisting_ExtensionUtil {
     return self::CLASS_PREFIX . '_' . str_replace('\\', '_', $suffix);
   }
 
-  public static function sendMessage($contactID) {
+  public static function sendMessage($contactID, $msgId) {
     if (empty($contactID)) {
       return;
     }
     $messageTemplates = new CRM_Core_DAO_MessageTemplate();
-    $messageTemplates->id = RECEIVED_MESSAGE;
+    $messageTemplates->id = $msgId;
     $messageTemplates->find(TRUE);
 
     $body_subject = CRM_Core_Smarty::singleton()->fetch("string:$messageTemplates->msg_subject");
@@ -173,7 +173,7 @@ class CRM_Aoservicelisting_ExtensionUtil {
 
 
   public static function createUserAccount($cid) {
-    $name = CRM_Core_DAO::executeQuery("SELECT LOWER(CONCAT(first_name, '.', last_name)) AS name, display_name
+    $name = CRM_Core_DAO::executeQuery("SELECT LOWER(CONCAT(first_name, '.', COALESCE(last_name, $cid))) AS name, display_name
           FROM civicrm_contact WHERE id = %1", [1 => [$cid, "Integer"]])->fetchAll()[0];
     if (self::usernameRule($cid)) {
       return FALSE;
@@ -195,6 +195,34 @@ class CRM_Aoservicelisting_ExtensionUtil {
     CRM_Core_BAO_CMSUser::create($params, 'email');
   }
 
+  function setStatus($cid, $submitValues) {
+    if (!empty($cid)) {
+      $oldStatus = NULL;
+      $oldStatus = civicrm_api3('Contact', 'getvalue', ['return' => STATUS, 'id' => $cid]);
+      $submitKeys = array_keys($submitValues);
+      $key = preg_grep('/^' . STATUS . '_[\d]*/', $submitKeys);
+      $newStatus = reset($key);
+      if (CRM_Utils_Array::value($newStatus, $submitValues) == 'Current Listing') {
+        // Create drupal account if not exists.
+        self::createUserAccount($cid);
+
+        // Send Mail
+        self::sendMessage($cid, APPROVED_MESSAGE);
+      }
+      if ($oldStatus) {
+        civicrm_api3('Activity', 'create', [
+          'source_contact_id' => $cid,
+          'activity_type_id' => "provider_status_changed",
+          'subject' => sprintf("Application status changed to %s", $oldStatus),
+          'activity_status_id' => 'Completed',
+          'details' => '<a class="action-item crm-hover-button" href="https://www.autismontario.com/civicrm/contact/view?cid=' . $cid . '">View Applicant</a>',
+          'target_id' => $cid,
+          'assignee_id' => CRM_Core_Session::singleton()->getLoggedInContactID() ?: NULL,
+        ]);
+      }
+    }
+  }
+
 }
 
 use CRM_Aoservicelisting_ExtensionUtil as E;
diff --git a/aoservicelisting.php b/aoservicelisting.php
index c572627..5fa59b3 100644
--- a/aoservicelisting.php
+++ b/aoservicelisting.php
@@ -141,6 +141,24 @@ function aoservicelisting_civicrm_themes(&$themes) {
   _aoservicelisting_civix_civicrm_themes($themes);
 }
 
+  /**
+   * Implementation of hook_civicrm_postProcess
+   *
+   * @link http://wiki.civicrm.org/confluence/display/CRMDOC/hook_civicrm_postProcess
+   */
+  function aoservicelisting_civicrm_postProcess($formName, &$form) {
+    if ($formName == "CRM_Contact_Form_Contact") {
+      if (!empty($form->_contactId) && count(preg_grep('/^' . STATUS . '_[\d]*/', array_keys($form->_submitValues))) > 0) {
+        E::setStatus($form->_contactId, $form->_submitValues);
+      }
+    }
+    if ($formName == "CRM_Contact_Form_Inline_CustomData") {
+      if (!empty($form->_submitValues['cid']) && count(preg_grep('/^' . STATUS . '_[\d]*/', array_keys($form->_submitValues))) > 0) {
+        E::setStatus($form->_submitValues['cid'], $form->_submitValues);
+      }
+    }
+  }
+
 // --- Functions below this ship commented out. Uncomment as required. ---
 
 /**
diff --git a/managed/service_listing_activity_types.mgd.php b/managed/service_listing_activity_types.mgd.php
index d046882..28f52bc 100644
--- a/managed/service_listing_activity_types.mgd.php
+++ b/managed/service_listing_activity_types.mgd.php
@@ -14,8 +14,17 @@ return [
     'entity' => 'OptionValue',
     'params' => [
       'option_group_id' => 'activity_type',
-      'label' => 'Service listing Edited',
+      'label' => 'Service listing edited',
       'name' => 'service_listing_edited',
     ],
   ],
+  2 => [
+    'name' => 'ServiceListingEditedActivityType',
+    'entity' => 'OptionValue',
+    'params' => [
+      'option_group_id' => 'activity_type',
+      'label' => 'Provider status changed',
+      'name' => 'provider_status_changed',
+    ],
+  ],
 ];
diff --git a/templates/CRM/Aoservicelisting/Form/ProviderApplicationForm.tpl b/templates/CRM/Aoservicelisting/Form/ProviderApplicationForm.tpl
index e61e958..ff14fb8 100644
--- a/templates/CRM/Aoservicelisting/Form/ProviderApplicationForm.tpl
+++ b/templates/CRM/Aoservicelisting/Form/ProviderApplicationForm.tpl
@@ -247,6 +247,58 @@
           }
         });
       }
+
+      // Add domains as default values.
+      var services = $('#editrow-custom_863 input[type=checkbox]');
+      showStaff(services.filter(':checked').length, services.filter(':checked'));
+      services.change(function() { // while you're at it listen for change rather than click, this is in case something else modifies the checkbox
+        var checked = parseInt(services.filter(':checked').length);
+        var unchecked = parseInt(services.filter(':not(:checked)').length);
+        showStaff(checked, services.filter(':checked'));
+        hideStaff(unchecked, checked);
+      });
+
+      function showStaff(countcheck, service) {
+        if (countcheck) {
+          for (var i=1; i<=countcheck; i++) {
+            $('#staff_member-' + i).removeClass('hiddenElement');
+          }
+          var count = 1;
+          service.each(function(i, v) {
+            var id = v.getAttribute('id');
+            var label = $('label[for="' + id + '"]').html();
+            var field = parseInt(id.split('_').pop());
+            if (field) {
+              CRM.api3('OptionValue', 'getvalue', {
+                "sequential": 1,
+                "return": "label",
+                "option_group_id": "regulator_url_mapping",
+                "value": field
+              }).then(function(result) {
+                if (result.result) {
+                  $('#staff_record_regulator_' + count).val('https://www.' + result.result);
+                  $('.crm-label-' + count).remove();
+                  $('#staff_member-' + count).find('div.crm-section:nth-child(3)').append('<div class="content crm-label-' + count + '">' + label + '</div>');
+                  count++;
+                }
+              }, function(error) {
+                // oops
+              });
+            }
+          });
+        }
+      }
+
+      function hideStaff(unchecked, checked) {
+        for (i=checked+1; i<=unchecked; i++) {
+          if (!$('#staff_member-' + i).hasClass('hiddenElement') && i > 1) {
+            $('#staff_member-' + i).addClass('hiddenElement');
+            $('#staff_record_regulator_' + i).val('');
+          }
+        }
+      }
+      // End domain default values
+
       $('#custom_863_3').on('change', function() {
        if ($(this).prop('checked')) {
          $('#camp_session-1, #camp-section').removeClass('hiddenElement');
